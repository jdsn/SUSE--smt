[NU]
NUUrl=https://nu.novell.com/
NURegUrl=https://secure-www.novell.com/center/regsvc/
NUUser=
NUPass=

[DB]
config=DBI:Pg:dbname=smt;host=localhost
user=smt
pass=

[LOCAL]
# Default should be http://server.domain.top/
url=
# This email address is used for registration at NCC 
nccEmail=
MirrorTo=/srv/www/htdocs
MirrorAll=false
MirrorSRC=false
forwardRegistration=true
rndRegister=0
# The hook script that should be called before the smt-mirror script removes its lock
mirror_preunlock_hook=
# The hook script that should be called after the smt-mirror script removed its lock
mirror_postunlock_hook=

# specify proxy settings here, if you do not want to use the global proxy settings
# If you leave these options empty the global options are used.
# 
# specify which proxy you want to use for HTTP connection
# in the form http://proxy.example.com:3128
HTTPProxy=
# specify which proxy you want to use for HTTPS connection
# in the form http://proxy.example.com:3128
HTTPSProxy=
# specify username and password if your proxy requires authentication
# in the form username:password
ProxyUser=

#
# require authentication to access the repository?
# Three possible authtypes can be configures here
# 1) none   : no authentication required (default)
# 2) lazy   : check only username and password. A valid user has access to all repositories
# 3) strict : check also if this user has access to the repository. 
#
requiredAuthType=none

#
# the smt commands should run with this unix user
#
smtUser=smt

#
# ID of the GPG key to be used to sign modified (filtered) repositories.
# The key must be accessible by the user who runs SMT, i.e. the user specified
# in the 'smtUser' configuration option.
#
# If empty, the modified repositories will be unsigned.
#
signingKeyID=

#
# This string is send in HTTP requests as UserAgent.
# If the key UserAgent does not exist, a default is used.
# If UserAgent is empty, no UserAgent string is set.
#
#UserAgent=

# Mirroring credentials for this SMT server.
# These are currently only used to get list of all available repositories
# from https://your.smt.url/repo/repoindex.xml
# Note: if authenticated as a client machine instead of these mirrorUser,
# the above URL returns only repositories relevant for that client.
#mirrorUser=
#mirrorPassword=


[REST]
# Enable administrative access to the SMT RESTService by setting enableRESTAdminAccess=1
# default: 0
enableRESTAdminAccess=0
# Define the username the REST-Admin uses for login
# default: RESTroot
RESTAdminUser=RESTroot
# Define the password for the REST-Admin (note: empty password is invalid)
# default: <empty>
RESTAdminPassword=


[JOBQUEUE]
# maximum age of finished (non-persistent) jobs in days
# default: 8
maxFinishedJobAge=8
# comma separated list of JobQueue status IDs that should be interpreted as successful
# See smt-job --help for more information about possible Status IDs
# Please note: An empty string will be interpreted as default (1,4).
# default: 1,4
# useful:  1,4,6
jobStatusIsSuccess=1,4


[REPORT]
# comma separated list of eMail addresses where the status reports will be sent to
reportEmail=
# from field of report mails - if empty it defaults to "root@<hostname>.<domainname>"
reportEmailFrom=
# relay mail server - leave emtpy if mail should be sent directly
mailServer=
mailServerPort=
# mail server authentication - leave empty if not required
mailServerUser=
mailServerPassword=



[YOU9-SLES-SDK]
mirror_prod=SLES-SDK
mirror_archs=i386,ia64,ppc,s390,s390x,x86_64
mirror_version=9
mirror=false
credentials=

[YOU9-SUSE-CORE]
mirror_prod=SUSE-CORE
mirror_archs=i386,ia64,ppc,s390,s390x,x86_64
mirror_version=9
mirror=false
credentials=

[YOU9-SUSE-SLES]
mirror_prod=SUSE-SLES
mirror_archs=i386,ia64,ppc,s390,s390x,x86_64
mirror_version=9
mirror=false
credentials=

